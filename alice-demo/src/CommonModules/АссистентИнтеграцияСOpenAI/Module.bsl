
#Область ПрограммныйИнтерфейс

Функция КлючСохраненияДанных() Экспорт
	
	Возврат "OpenAI";
	
КонецФункции

Функция ОтправитьСообщение(ТекстСообщения, Токен, Отказ, ИдентификаторЧата = "") Экспорт
	
	Отказ = ЛОЖЬ;
	ОтветНаВопрос = Неопределено;
	
	УстановитьПривилегированныйРежим(ИСТИНА);
	
	HTTPСоединение = Новый HTTPСоединение(АдресСервера(),,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	СоответсвиеЗаголовки = Новый Соответствие;
	СоответсвиеЗаголовки.Вставить("Content-Type"	, "application/json");
	СоответсвиеЗаголовки.Вставить("Authorization"	, "Bearer " + Токен);
	
	Сообщения = Новый Массив;
		
	НовоеСообщение = Новый Соответствие;
	НовоеСообщение.Вставить("role", "user");
	НовоеСообщение.Вставить("content", ТекстСообщения);
		
	Сообщения.Добавить(НовоеСообщение);
		
	Данные = Новый Соответствие; 
	Данные.Вставить("model"		, "gpt-3.5-turbo");
	Данные.Вставить("messages",	 Сообщения);
		
	СтрокаТелаЗапроса = ПреобразоватьСоответствиеВСтрокуJSON(Данные);
		
	HTTPЗапрос = Новый HTTPЗапрос("/v1/chat/completions", СоответсвиеЗаголовки);
		
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
	
	Попытка
		РезультатHTTPЗапроса = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);		
	Исключение
		Отказ = ИСТИНА;
		СообщениеОбОшибке = "Ошибка при получении данных с сайта: " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());		
	КонецПопытки;

	Если НЕ Отказ Тогда
	
		Если РезультатHTTPЗапроса.КодСостояния <> 200 Тогда
								
			Отказ = ИСТИНА;
			СообщениеОбОшибке = "Ошибка при получении данных с сайта: код состояния = " + РезультатHTTPЗапроса.КодСостояния;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
	
		Попытка
		
			Строка_JSON = РезультатHTTPЗапроса.ПолучитьТелоКакСтроку();
			
			СоответствиеРезультата = ПреобразоватьСтрокуJSONВСоответствие(Строка_JSON);
			
			МассивРезультатов = СоответствиеРезультата["choices"];
			
			Если МассивРезультатов <> Неопределено 
					И МассивРезультатов.Количество() 
					И ТипЗнч(МассивРезультатов[0]) = Тип("Соответствие")
					И МассивРезультатов[0]["message"] <> Неопределено
					И ТипЗнч(МассивРезультатов[0]["message"]) = Тип("Соответствие") Тогда
				ОтветНаВопрос = СокрЛП(МассивРезультатов[0]["message"]["content"]);	
			Конецесли;
						
		Исключение
			
			Отказ = ИСТИНА;
			СообщениеОбОшибке = "Ошибка разбора ответа с сайта:" + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
									
		КонецПопытки; 
		
	КонецЕсли;
	
	Если Отказ Тогда
		ОтветНаВопрос = СообщениеОбОшибке;
	Иначе
		//ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(КлючСохраненияДанных(), Токен, "Токен");
		//ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;  
	
	ДатаОбращения = ТекущаяДатаСеанса();
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Вопрос"	, ТекстСообщения);	
	СтруктураОтвета.Вставить("Ответ"	, ОтветНаВопрос);
	СтруктураОтвета.Вставить("Отказ"	, Отказ);
	СтруктураОтвета.Вставить("Период"	, ДатаОбращения);
	
	//РегистрыСведений.АссистентСообщенияЧатГПТ.Зафиксировать(
	//	СтруктураОтвета.Период, 
	//	СтруктураОтвета.Вопрос, 
	//	СтруктураОтвета.Ответ, 
	//	СтруктураОтвета.Отказ);
	
	Возврат СтруктураОтвета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция АдресСервера()
	
	Возврат "api.openai.com";
	
КонецФункции

Функция ПреобразоватьСоответствиеВСтрокуJSON(Данные, БезПереносов = Ложь)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	Если БезПереносов Тогда
		ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, "");
		ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписи);
	Иначе
		ЗаписьJSON.УстановитьСтроку();
	КонецЕсли;
	
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

Функция ПреобразоватьСтрокуJSONВСоответствие(JSON)
	
	Попытка
	
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(JSON);
		Соответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
		ЧтениеJSON.Закрыть();
		
	Исключение
		
		Соответствие = Новый Соответствие;
		
	КонецПопытки;
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти




